{"ast":null,"code":"var _jsxFileName = \"/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/posts/PostItem.js\";\n// Section 11 Lecture 61 - Post Item Component\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\"; // used when we add a like, remove a like, delete a post,etc\n\nimport { connect } from \"react-redux\";\n\nconst PostItem = ({\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => React.createElement(\"div\", {\n  class: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: \"profile.html\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  class: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"John Doe\"))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  class: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint possimus corporis sunt necessitatibus! Minus nesciunt soluta suscipit nobis. Amet accusamus distinctio cupiditate blanditiis dolor? Illo perferendis eveniet cum cupiditate aliquam?\"), React.createElement(\"p\", {\n  class: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"Posted on 04/16/2019\"), React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  class: \"fas fa-thumbs-up\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"4\")), React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  class: \"fas fa-thumbs-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})), React.createElement(\"a\", {\n  href: \"post.html\",\n  class: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"Discussion \", React.createElement(\"span\", {\n  class: \"comment-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \"2\")), React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  class: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}))));\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}; // uses auth's state so we can provide a button to delete a post/comment only if that post/comment belongs to that user\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(PostItem);","map":{"version":3,"sources":["/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,IADgB;AAEhBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA,KAAjC;AAAwCC,IAAAA,QAAxC;AAAkDC,IAAAA;AAAlD;AAFU,CAAD,KAIf;AAAK,EAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,KAAK,EAAC,WAAX;AAAuB,EAAA,GAAG,EAAEJ,MAA5B;AAAoC,EAAA,GAAG,EAAC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wPADF,EAOE;AAAG,EAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,EAQE;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,KAAK,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,KAAK,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CARF,EAYE;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,KAAK,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,KAAK,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAZF,EAeE;AAAG,EAAA,IAAI,EAAC,WAAR;AAAoB,EAAA,KAAK,EAAC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACa;AAAM,EAAA,KAAK,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADb,CAfF,EAkBE;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,KAAK,EAAC,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,KAAK,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAlBF,CAPF,CAJF;;AAoCAN,QAAQ,CAACW,SAAT,GAAqB;AACnBT,EAAAA,IAAI,EAAEN,SAAS,CAACgB,MAAV,CAAiBC,UADJ;AAEnBZ,EAAAA,IAAI,EAAEL,SAAS,CAACgB,MAAV,CAAiBC;AAFJ,CAArB,C,CAKA;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAL,CAA7B;;AAGA,eAAeF,OAAO,CACpBe,eADoB,EAEpB,EAFoB,CAAP,CAGbd,QAHa,CAAf","sourcesContent":["// Section 11 Lecture 61 - Post Item Component\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\n// used when we add a like, remove a like, delete a post,etc\nimport { connect } from \"react-redux\";\n\nconst PostItem = ({\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date }\n}) => (\n  <div class=\"post bg-white p-1 my-1\">\n    <div>\n      <a href=\"profile.html\">\n        <img class=\"round-img\" src={avatar} alt=\"\" />\n        <h4>John Doe</h4>\n      </a>\n    </div>\n    <div>\n      <p class=\"my-1\">\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint possimus\n        corporis sunt necessitatibus! Minus nesciunt soluta suscipit nobis. Amet\n        accusamus distinctio cupiditate blanditiis dolor? Illo perferendis\n        eveniet cum cupiditate aliquam?\n      </p>\n      <p class=\"post-date\">Posted on 04/16/2019</p>\n      <button type=\"button\" class=\"btn btn-light\">\n        <i class=\"fas fa-thumbs-up\" />\n        <span>4</span>\n      </button>\n      <button type=\"button\" class=\"btn btn-light\">\n        <i class=\"fas fa-thumbs-down\" />\n      </button>\n      <a href=\"post.html\" class=\"btn btn-primary\">\n        Discussion <span class=\"comment-count\">2</span>\n      </a>\n      <button type=\"button\" class=\"btn btn-danger\">\n        <i class=\"fas fa-times\" />\n      </button>\n    </div>\n  </div>\n);\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\n// uses auth's state so we can provide a button to delete a post/comment only if that post/comment belongs to that user\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  {}\n)(PostItem);\n"]},"metadata":{},"sourceType":"module"}