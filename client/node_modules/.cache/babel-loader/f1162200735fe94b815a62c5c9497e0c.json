{"ast":null,"code":"var _jsxFileName = \"/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/App.js\";\nimport React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\"; // bring in Navbar component\n\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\"; // Redux\n// need a provider so we can connect Redux to React, we will enclose our entire app (our React app) in a Provider tag\n\nimport { Provider } from \"react-redux\"; // bring in the redux store found in our store.js that we made\n\nimport store from \"./store\";\nimport \"./App.css\";\n\nconst App = () => // we need to pass in the store to the Provider\nReact.createElement(Provider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(Navbar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Landing,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(\"section\", {\n  className: \"container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/register\",\n  component: Register,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/login\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}))))));\n\nexport default App;","map":{"version":3,"sources":["/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/App.js"],"names":["React","Fragment","BrowserRouter","Router","Route","Switch","Navbar","Landing","Register","Login","Provider","store","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,4BAAnB,C,CAAiD;;AACjD,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CAEA;AACA;;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MACV;AACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAME,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEL,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,EAQE;AAAS,EAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,WAAlB;AAA8B,EAAA,SAAS,EAAEC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,QAAlB;AAA2B,EAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CAFF,CARF,CAFF,CAHF,CAFF;;AA4BA,eAAeG,GAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\"; // bring in Navbar component\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\n\n// Redux\n// need a provider so we can connect Redux to React, we will enclose our entire app (our React app) in a Provider tag\nimport { Provider } from \"react-redux\";\n// bring in the redux store found in our store.js that we made\nimport store from \"./store\";\nimport \"./App.css\";\n\nconst App = () => (\n  // we need to pass in the store to the Provider\n  <Provider>\n    {/* in order for router to work, wrap everything in Router tag\n   Router was brought in by this:   import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; */}\n    <Router>\n      {/* Fragment is a ghost element, it won't show up in the DOM*/}\n      <Fragment>\n        <Navbar />\n        {/* Render Landing component\n        The \"exact path\" is where the component will show up (in this case it will be the home page b/c of the \"/\")\n        The \"component\" is which component you want there\n      */}\n        <Route exact path=\"/\" component={Landing} />\n        {/* Everything has a container class expect Landing component so put them all in this section with that className */}\n        <section className=\"container\">\n          {/* wrap everything in a Switch so we don't have issues with private routes */}\n          <Switch>\n            {/* This component will only show up when the URL ends with \"/register\" */}\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n          </Switch>\n        </section>\n      </Fragment>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}