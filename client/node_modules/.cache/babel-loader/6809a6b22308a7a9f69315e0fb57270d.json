{"ast":null,"code":"var _jsxFileName = \"/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/profiles/Profiles.js\";\n// Section 10 Lecture 54\n// as soon as this profile loads we need to call GET_PROFILE that we made in the last video and we need useEffect for that\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfiles } from \"../../actions/profile\";\nimport { connect } from \"react-redux\"; // we want profiles and loading from the profile object\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  // as soon as this profile loads we need to run getProfiles()\n  // Next, we go to App.js and add code to make sure profiles get put in the state\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n}); // we need to get our profile state so we need mapStateToProps\n\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","Spinner","getProfiles","connect","Profiles","profile","profiles","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEF,EAAAA,WAAF;AAAeG,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAxB,CAAD,KAAqD;AACpE;AACA;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CARD;;AAUAE,QAAQ,CAACI,SAAT,GAAqB;AACnBN,EAAAA,WAAW,EAAEF,SAAS,CAACS,IAAV,CAAeC,UADT;AAEnBL,EAAAA,OAAO,EAAEL,SAAS,CAACW,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AADiB,CAAL,CAA7B,C,CAGA;;;AACA,eAAeF,OAAO,CACpBS,eADoB,EAEpB;AAAEV,EAAAA;AAAF,CAFoB,CAAP,CAGbE,QAHa,CAAf","sourcesContent":["// Section 10 Lecture 54\n// as soon as this profile loads we need to call GET_PROFILE that we made in the last video and we need useEffect for that\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfiles } from \"../../actions/profile\";\nimport { connect } from \"react-redux\";\n\n// we want profiles and loading from the profile object\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  // as soon as this profile loads we need to run getProfiles()\n  // Next, we go to App.js and add code to make sure profiles get put in the state\n  useEffect(() => {\n    getProfiles();\n  }, []);\n\n  return <div />;\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n// we need to get our profile state so we need mapStateToProps\nexport default connect(\n  mapStateToProps,\n  { getProfiles }\n)(Profiles);\n"]},"metadata":{},"sourceType":"module"}