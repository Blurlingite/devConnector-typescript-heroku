{"ast":null,"code":"var _jsxFileName = \"/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/profile/ProfileGithub.js\";\n// Section 10 Lecture 59 - Displaying Github Repos\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport { connect } from \"react-redux\";\nimport { getGithubRepos } from \"../../actions/profile\"; // we pass in the username, the getGithubRepos action, the repos (which come from the state)\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos(username)]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos // get the repos from the profile in the state and assign it to \"repos\"\n\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","Spinner","connect","getGithubRepos","ProfileGithub","username","repos","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CAEA;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYF,EAAAA,cAAZ;AAA4BG,EAAAA;AAA5B,CAAD,KAAyC;AAC7DP,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACE,QAAD,CAAd;AACD,GAFQ,EAEN,CAACF,cAAc,CAACE,QAAD,CAAf,CAFM,CAAT;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAND;;AAQAD,aAAa,CAACG,SAAd,GAA0B;AACxBJ,EAAAA,cAAc,EAAEH,SAAS,CAACQ,IAAV,CAAeC,UADP;AAExBH,EAAAA,KAAK,EAAEN,SAAS,CAACU,KAAV,CAAgBD,UAFC;AAGxBJ,EAAAA,QAAQ,EAAEL,SAAS,CAACW,MAAV,CAAiBF;AAHH,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,KAAK,EAAEO,KAAK,CAACC,OAAN,CAAcR,KADW,CACL;;AADK,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CACpBU,eADoB,EAEpB;AAAET,EAAAA;AAAF,CAFoB,CAAP,CAGbC,aAHa,CAAf","sourcesContent":["// Section 10 Lecture 59 - Displaying Github Repos\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layout/Spinner\";\nimport { connect } from \"react-redux\";\nimport { getGithubRepos } from \"../../actions/profile\";\n\n// we pass in the username, the getGithubRepos action, the repos (which come from the state)\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos(username)]);\n\n  return <div />;\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos // get the repos from the profile in the state and assign it to \"repos\"\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGithubRepos }\n)(ProfileGithub);\n"]},"metadata":{},"sourceType":"module"}