{"ast":null,"code":"var _jsxFileName = \"/Users/vishnukdawah/Desktop/devConnector-typescript-heroku/client/src/components/posts/PostItem.tsx\";\nimport React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\nimport { bindActionCreators } from \"redux\";\n\n// type Props = PostItemProps;\nconst PostItem = ({\n  // addLike,\n  // removeLike,\n  // deletePost,\n  // auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => {\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  return React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" \", \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, date)), showActions && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    // onClick={e => addLike(_id)}\n    onClick: _id => dispatch({\n      type: \"UPDATE_LIKES\"\n    }),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \" \", likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, likes.length))), React.createElement(\"button\", {\n    onClick: e => removeLike(_id),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/posts/\".concat(_id),\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Discussion\", \" \", comments.length > 0 && React.createElement(\"span\", {\n    className: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n    onClick: e => deletePost(_id),\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })))));\n};\n\nPostItem.defaultProps = {\n  showActions: true\n}; // PostItem.propTypes = {\n//   post: PropTypes.object.isRequired,\n//   auth: PropTypes.object.isRequired,\n//   addLike: PropTypes.func.isRequired,\n//   removeLike: PropTypes.func.isRequired,\n//   deletePost: PropTypes.func.isRequired\n// };\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  addLike: bindActionCreators(addLike, dispatch),\n  removeLike: bindActionCreators(removeLike, dispatch),\n  deletePost: bindActionCreators(deletePost, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostItem);","map":{"version":3,"sources":["/Users/vishnukdawah/Desktop/devConnector-typescript-heroku/client/src/components/posts/PostItem.tsx"],"names":["React","Fragment","Link","Moment","connect","useSelector","useDispatch","addLike","removeLike","deletePost","bindActionCreators","PostItem","post","_id","text","name","avatar","user","likes","comments","date","showActions","auth","state","dispatch","type","length","e","loading","defaultProps","mapStateToProps","mapDispatchToProps","ownProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA6C,OAA7C;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,QAAgD,oBAAhD;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AA2BA;AAGA,MAAMC,QAAiC,GAAG,CAAC;AACzC;AACA;AACA;AACA;AACAC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA,KAAjC;AAAwCC,IAAAA,QAAxC;AAAkDC,IAAAA;AAAlD,GALmC;AAMzCC,EAAAA;AANyC,CAAD,KAOpC;AACJ,QAAMC,IAAI,GAAGjB,WAAW,CAAuBkB,KAAK,IAAIA,KAAK,CAACD,IAAtC,CAAxB;AAEA,QAAME,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,qBAAcW,IAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAED,MAAhC;AAAwC,IAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,IAArB,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,gBAEY,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BM,IAA7B,CAFZ,CAFF,EAOGC,WAAW,IACV,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE;AACA,IAAA,OAAO,EAAER,GAAG,IAAIW,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAF1B;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,SAAS,EAAC,eAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAMqC,GANrC,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQP,KAAK,CAACQ,MAAN,GAAe,CAAf,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,KAAK,CAACQ,MAAb,CAA5B,CAPF,CADF,EAUE;AACE,IAAA,OAAO,EAAEC,CAAC,IAAInB,UAAU,CAACK,GAAD,CAD1B;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAVF,EAkBE,oBAAC,IAAD;AAAM,IAAA,EAAE,mBAAYA,GAAZ,CAAR;AAA2B,IAAA,SAAS,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,GADb,EAEGM,QAAQ,CAACO,MAAT,GAAkB,CAAlB,IACC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCP,QAAQ,CAACO,MAA1C,CAHJ,CAlBF,EAyBG,CAACJ,IAAI,CAACM,OAAN,IAAiBX,IAAI,KAAKK,IAAI,CAACL,IAAL,CAAUJ,GAApC,IACC;AACE,IAAA,OAAO,EAAEc,CAAC,IAAIlB,UAAU,CAACI,GAAD,CAD1B;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA1BJ,CARJ,CAPF,CADF;AAuDD,CAnED;;AAqEAF,QAAQ,CAACkB,YAAT,GAAwB;AACtBR,EAAAA,WAAW,EAAE;AADS,CAAxB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA,MAAMS,eAAe,GAAIP,KAAD,KAAsC;AAC5DD,EAAAA,IAAI,EAAEC,KAAK,CAACD;AADgD,CAAtC,CAAxB;;AAIA,MAAMS,kBAAkB,GAAG,CACzBP,QADyB,EAEzBQ,QAFyB,MAGF;AACvBzB,EAAAA,OAAO,EAAEG,kBAAkB,CAACH,OAAD,EAAUiB,QAAV,CADJ;AAEvBhB,EAAAA,UAAU,EAAEE,kBAAkB,CAACF,UAAD,EAAagB,QAAb,CAFP;AAGvBf,EAAAA,UAAU,EAAEC,kBAAkB,CAACD,UAAD,EAAae,QAAb;AAHP,CAHE,CAA3B;;AASA,eAAepB,OAAO,CAAC0B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpB,QAA7C,CAAf","sourcesContent":["import React, { Fragment, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\nimport { bindActionCreators } from \"redux\";\nimport { AppState } from \"../../store\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AppActions } from \"../../actions/types\";\nimport { User } from \"../../types/User\";\nimport { Auth } from \"../../types/Auth\";\n\ninterface PostItemProps {\n  // addLike: React.Dispatch<React.SetStateAction<any>>;\n  // removeLike: React.Dispatch<React.SetStateAction<any>>;\n  // deletePost: React.Dispatch<React.SetStateAction<any>>;\n  // auth: Auth;\n  post: {\n    _id: string;\n    text: string;\n    name: string;\n    avatar: string;\n    user: string;\n    likes: [{ user: User }];\n    comments: [\n      { user: User; text: string; name: string; avatar: string; date: Date }\n    ];\n    date: any;\n  };\n  showActions: boolean;\n}\n\n// type Props = PostItemProps;\n// & LinkDispatchProps & LinkStateProps;\n\nconst PostItem: React.FC<PostItemProps> = ({\n  // addLike,\n  // removeLike,\n  // deletePost,\n  // auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions\n}) => {\n  const auth = useSelector<LinkStateProps, Auth>(state => state.auth);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{text}</p>\n        <p className=\"post-date\">\n          {\" \"}\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n\n        {showActions && (\n          <Fragment>\n            <button\n              // onClick={e => addLike(_id)}\n              onClick={_id => dispatch({ type: \"UPDATE_LIKES\" })}\n              type=\"button\"\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-up\" />{\" \"}\n              <span> {likes.length > 0 && <span>{likes.length}</span>}</span>\n            </button>\n            <button\n              onClick={e => removeLike(_id)}\n              type=\"button\"\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-down\" />\n            </button>\n\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n              Discussion{\" \"}\n              {comments.length > 0 && (\n                <span className=\"comment-count\">{comments.length}</span>\n              )}\n            </Link>\n\n            {!auth.loading && user === auth.user._id && (\n              <button\n                onClick={e => deletePost(_id)}\n                type=\"button\"\n                className=\"btn btn-danger\"\n              >\n                <i className=\"fas fa-times\" />\n              </button>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\n\n// PostItem.propTypes = {\n//   post: PropTypes.object.isRequired,\n//   auth: PropTypes.object.isRequired,\n//   addLike: PropTypes.func.isRequired,\n//   removeLike: PropTypes.func.isRequired,\n//   deletePost: PropTypes.func.isRequired\n// };\n\ninterface LinkStateProps {\n  auth: Auth;\n}\n\ninterface LinkDispatchProps {\n  addLike: (id: string) => void;\n  removeLike: (id: string) => void;\n  deletePost: (id: string) => void;\n}\n\nconst mapStateToProps = (state: AppState): LinkStateProps => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<any, any, AppActions>,\n  ownProps: PostItemProps\n): LinkDispatchProps => ({\n  addLike: bindActionCreators(addLike, dispatch),\n  removeLike: bindActionCreators(removeLike, dispatch),\n  deletePost: bindActionCreators(deletePost, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostItem);\n"]},"metadata":{},"sourceType":"module"}