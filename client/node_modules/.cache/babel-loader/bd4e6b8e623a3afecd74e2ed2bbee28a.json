{"ast":null,"code":"import _objectSpread from \"/Users/vishnukdawah/Desktop/devConnector-typescript-heroku/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  if (state != null) {\n    // }\n    switch (type) {\n      case GET_POSTS:\n        return _objectSpread({}, state, {\n          posts: payload,\n          loading: false\n        });\n\n      case GET_POST:\n        return _objectSpread({}, state, {\n          post: payload,\n          loading: false\n        });\n\n      case ADD_POST:\n        return _objectSpread({}, state, {\n          posts: [payload, ...state.posts],\n          loading: false\n        });\n\n      case DELETE_POST:\n        return _objectSpread({}, state, {\n          // post is of type \"any\" b/c the \"_id\" is randomly generated by the NoSQL database. It is not a field in my Post object\n          posts: state.posts.filter(post => post._id !== payload),\n          loading: false\n        });\n\n      case POST_ERROR:\n        return _objectSpread({}, state, {\n          error: payload,\n          loading: false\n        });\n\n      case UPDATE_LIKES:\n        return _objectSpread({}, state, {\n          // post is of type \"any\" b/c the \"_id\" is randomly generated by the NoSQL database. It is not a field in my Post object\n          posts: state.posts.map(post => post._id === payload.id ? _objectSpread({}, post, {\n            likes: payload.likes\n          }) : post),\n          loading: false\n        });\n\n      case ADD_COMMENT:\n        return _objectSpread({}, state, {\n          post: _objectSpread({}, state.post, {\n            comments: payload\n          }),\n          loading: false\n        });\n\n      case REMOVE_COMMENT:\n        return _objectSpread({}, state, {\n          post: _objectSpread({}, state.post, {\n            comments: state.post.comments.filter(comment => comment._id !== payload)\n          }),\n          loading: false\n        });\n\n      default:\n        return state;\n    }\n  } else {\n    return null;\n  }\n}","map":{"version":3,"sources":["/Users/vishnukdawah/Desktop/devConnector-typescript-heroku/client/src/reducers/post.ts"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"mappings":";AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,cARF,QASO,kBATP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAwD;AAAA,QAC7DC,IAD6D,GAC3CD,MAD2C,CAC7DC,IAD6D;AAAA,QACvDC,OADuD,GAC3CF,MAD2C,CACvDE,OADuD;;AAGrE,MAAIH,KAAK,IAAI,IAAb,EAAmB;AACjB;AACA,YAAQE,IAAR;AACE,WAAKf,SAAL;AACE,iCACKa,KADL;AAEEJ,UAAAA,KAAK,EAAEO,OAFT;AAGEL,UAAAA,OAAO,EAAE;AAHX;;AAMF,WAAKN,QAAL;AACE,iCACKQ,KADL;AAEEH,UAAAA,IAAI,EAAEM,OAFR;AAGEL,UAAAA,OAAO,EAAE;AAHX;;AAMF,WAAKP,QAAL;AACE,iCACKS,KADL;AAEEJ,UAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFT;AAGEE,UAAAA,OAAO,EAAE;AAHX;;AAMF,WAAKR,WAAL;AACE,iCACKU,KADL;AAEE;AACAJ,UAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBP,IAAD,IAAeA,IAAI,CAACQ,GAAL,KAAaF,OAA/C,CAHT;AAIEL,UAAAA,OAAO,EAAE;AAJX;;AAOF,WAAKV,UAAL;AACE,iCACKY,KADL;AAEED,UAAAA,KAAK,EAAEI,OAFT;AAGEL,UAAAA,OAAO,EAAE;AAHX;;AAMF,WAAKT,YAAL;AACE,iCACKW,KADL;AAEE;AACAJ,UAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAiBT,IAAD,IACrBA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,qBAA+BV,IAA/B;AAAqCW,YAAAA,KAAK,EAAEL,OAAO,CAACK;AAApD,eAA8DX,IADzD,CAHT;AAMEC,UAAAA,OAAO,EAAE;AANX;;AASF,WAAKL,WAAL;AACE,iCACKO,KADL;AAEEH,UAAAA,IAAI,oBAAaG,KAAK,CAACH,IAAnB;AAA0BY,YAAAA,QAAQ,EAAEN;AAApC,YAFN;AAGEL,UAAAA,OAAO,EAAE;AAHX;;AAKF,WAAKJ,cAAL;AACE,iCACKM,KADL;AAEEH,UAAAA,IAAI,oBACOG,KAAK,CAACH,IADb;AAEFY,YAAAA,QAAQ,EAAET,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBL,MAApB,CACRM,OAAO,IAAIA,OAAO,CAACL,GAAR,KAAgBF,OADnB;AAFR,YAFN;AAQEL,UAAAA,OAAO,EAAE;AARX;;AAWF;AACE,eAAOE,KAAP;AAlEJ;AAoED,GAtED,MAsEO;AACL,WAAO,IAAP;AACD;AACF","sourcesContent":["import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from \"../actions/types\";\nimport { PostActionTypes } from \"../actions/types\";\nimport { Post } from \"../types/Post\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action: PostActionTypes) {\n  const { type, payload } = action;\n\n  if (state != null) {\n    // }\n    switch (type) {\n      case GET_POSTS:\n        return {\n          ...state,\n          posts: payload,\n          loading: false\n        };\n\n      case GET_POST:\n        return {\n          ...state,\n          post: payload,\n          loading: false\n        };\n\n      case ADD_POST:\n        return {\n          ...state,\n          posts: [payload, ...state.posts],\n          loading: false\n        };\n\n      case DELETE_POST:\n        return {\n          ...state,\n          // post is of type \"any\" b/c the \"_id\" is randomly generated by the NoSQL database. It is not a field in my Post object\n          posts: state.posts.filter((post: any) => post._id !== payload),\n          loading: false\n        };\n\n      case POST_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n        };\n\n      case UPDATE_LIKES:\n        return {\n          ...state,\n          // post is of type \"any\" b/c the \"_id\" is randomly generated by the NoSQL database. It is not a field in my Post object\n          posts: state.posts.map((post: any) =>\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\n          ),\n          loading: false\n        };\n\n      case ADD_COMMENT:\n        return {\n          ...state,\n          post: { ...(<any>state.post), comments: payload },\n          loading: false\n        };\n      case REMOVE_COMMENT:\n        return {\n          ...state,\n          post: {\n            ...(<any>state.post),\n            comments: state.post.comments.filter(\n              comment => comment._id !== payload\n            )\n          },\n          loading: false\n        };\n\n      default:\n        return state;\n    }\n  } else {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}