{"ast":null,"code":"var _jsxFileName = \"/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/post/Post.js\";\n// Section 11 Lecture 65 - Single Post Display\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport { getPost } from \"../../actions/post\"; // from the post state (post:) we pull the post itself (post) and loading\n// we also need the ID in the URL which is in the \"match\" object\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  // get the post using the ID in the URL coming in on the \"match\" object\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]); // make sure post has been loaded first\n  // If loading is true or the post is not there (null), then show the spinner\n  // Else show the post in a Fragment using the PostItem component\n\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n}); // need mapStateToProps when you are getting something from the state\n\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","PostItem","getPost","Post","post","loading","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,oBAAxB,C,CAEA;AACA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAED,EAAAA,OAAF;AAAWE,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAC5D;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACN,OAAD,CAFM,CAAT,CAF4D,CAM5D;AACA;AACA;;AACA,SAAOG,OAAO,IAAID,IAAI,KAAK,IAApB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAME,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHF;AAYD,CArBD;;AAuBAD,IAAI,CAACM,SAAL,GAAiB;AACfP,EAAAA,OAAO,EAAEJ,SAAS,CAACY,IAAV,CAAeC,UADT;AAEfP,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,CAAL,CAA7B,C,CAIA;;;AACA,eAAeL,OAAO,CACpBc,eADoB,EAEpB;AAAEX,EAAAA;AAAF,CAFoB,CAAP,CAGbC,IAHa,CAAf","sourcesContent":["// Section 11 Lecture 65 - Single Post Display\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport { getPost } from \"../../actions/post\";\n\n// from the post state (post:) we pull the post itself (post) and loading\n// we also need the ID in the URL which is in the \"match\" object\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  // get the post using the ID in the URL coming in on the \"match\" object\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  // make sure post has been loaded first\n  // If loading is true or the post is not there (null), then show the spinner\n  // Else show the post in a Fragment using the PostItem component\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to=\"/posts\" className=\"btn\">\n        Back To Posts\n      </Link>\n      {/* PostItem needs 2 arguments, post & showActions.\n      showActions is passed \"false\" so the buttons don't appear (the code for that is in the PostItem component)  */}\n      <PostItem post={post} showActions={false} />\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\n// need mapStateToProps when you are getting something from the state\nexport default connect(\n  mapStateToProps,\n  { getPost }\n)(Post);\n"]},"metadata":{},"sourceType":"module"}