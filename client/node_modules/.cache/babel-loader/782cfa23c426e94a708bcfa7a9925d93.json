{"ast":null,"code":"import _objectSpread from \"/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// Section 9 Lecture 45\n// CLEAR_PROFILE is used to clear a profile when logged out so old user's profile data is not still loaded into redux when you login with a different user\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_REPOS } from \"../actions/types\"; // the initial state for profile (or most things would start out empty)\n//these are not fields on the Profile object\n\nconst initialState = {\n  profile: null,\n  // contains all profile data. If we view another user's profile page, that data will go here also\n  profiles: [],\n  // contains state (data) for profile listing page (list of all profiles)\n  repos: [],\n  // when you get the Github repos they will go in here\n  loading: true,\n  // once you make a request you will set this to false b/c it will be done loading at that point\n  error: {} // all errors in request go in here\n\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return _objectSpread({}, state, {\n        profile: payload,\n        loading: false\n      });\n    // fill the empty profiles array above (in initialState) with profiles from the server\n\n    case GET_PROFILES:\n      return _objectSpread({}, state, {\n        profiles: payload,\n        loading: false\n      });\n\n    case PROFILE_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    case CLEAR_PROFILE:\n      return _objectSpread({}, state, {\n        profile: null,\n        // clears profile\n        repos: [],\n        // empty repos on the profile\n        loading: false // done loading\n\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/reducers/profile.js"],"names":["GET_PROFILE","GET_PROFILES","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","GET_REPOS","initialState","profile","profiles","repos","loading","error","state","action","type","payload"],"mappings":";AAAA;AACA;AACA,SACEA,WADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,SANF,QAOO,kBAPP,C,CASA;AACA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AACJ;AACfC,EAAAA,QAAQ,EAAE,EAFS;AAEL;AACdC,EAAAA,KAAK,EAAE,EAHY;AAGR;AACXC,EAAAA,OAAO,EAAE,IAJU;AAIJ;AACfC,EAAAA,KAAK,EAAE,EALY,CAKT;;AALS,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AAAA,QAC5CC,IAD4C,GAC1BD,MAD0B,CAC5CC,IAD4C;AAAA,QACtCC,OADsC,GAC1BF,MAD0B,CACtCE,OADsC;;AAGpD,UAAQD,IAAR;AACE,SAAKd,WAAL;AACA,SAAKI,cAAL;AACE,+BACKQ,KADL;AAEEL,QAAAA,OAAO,EAAEQ,OAFX;AAGEL,QAAAA,OAAO,EAAE;AAHX;AAMF;;AACA,SAAKT,YAAL;AACE,+BACKW,KADL;AAEEJ,QAAAA,QAAQ,EAAEO,OAFZ;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKR,aAAL;AACE,+BACKU,KADL;AAEED,QAAAA,KAAK,EAAEI,OAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKP,aAAL;AACE,+BACKS,KADL;AAEEL,QAAAA,OAAO,EAAE,IAFX;AAEiB;AACfE,QAAAA,KAAK,EAAE,EAHT;AAGa;AACXC,QAAAA,OAAO,EAAE,KAJX,CAIiB;;AAJjB;;AAMF;AACE,aAAOE,KAAP;AA9BJ;AAgCD","sourcesContent":["// Section 9 Lecture 45\n// CLEAR_PROFILE is used to clear a profile when logged out so old user's profile data is not still loaded into redux when you login with a different user\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_REPOS\n} from \"../actions/types\";\n\n// the initial state for profile (or most things would start out empty)\n//these are not fields on the Profile object\nconst initialState = {\n  profile: null, // contains all profile data. If we view another user's profile page, that data will go here also\n  profiles: [], // contains state (data) for profile listing page (list of all profiles)\n  repos: [], // when you get the Github repos they will go in here\n  loading: true, // once you make a request you will set this to false b/c it will be done loading at that point\n  error: {} // all errors in request go in here\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n\n    // fill the empty profiles array above (in initialState) with profiles from the server\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null, // clears profile\n        repos: [], // empty repos on the profile\n        loading: false // done loading\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}