{"ast":null,"code":"import _objectSpread from \"/Users/vishnukdawah/Desktop/devConnector-typescript-heroku/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ActionTypes } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  post: {\n    user: null,\n    text: \"string\",\n    name: \"string\",\n    avatar: \"string\",\n    likes: [{\n      user: null\n    }],\n    comments: [{\n      _id: \"string\",\n      user: null,\n      text: \"string\",\n      name: \"string\",\n      avatar: \"string\",\n      date: Date\n    }],\n    date: Date\n  },\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  // const { type, payload } = action;\n  switch (action.type) {\n    case ActionTypes.GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: payload,\n        loading: false\n      });\n    // case ActionTypes.GET_POST:\n    //   return {\n    //     ...state,\n    //     post: payload,\n    //     loading: false\n    //   };\n    // case ADD_POST:\n    //   return {\n    //     ...state,\n    //     posts: [payload, ...state.posts],\n    //     loading: false\n    //   };\n    // case DELETE_POST:\n    //   return {\n    //     ...state,\n    //     // post is of type \"any\" b/c the \"_id\" is randomly generated by the NoSQL database. It is not a field in my Post object\n    //     posts: state.posts.filter((post: any) => post._id !== payload),\n    //     loading: false\n    //   };\n    // case POST_ERROR:\n    //   return {\n    //     ...state,\n    //     error: payload,\n    //     loading: false\n    //   };\n    // case UPDATE_LIKES:\n    //   return {\n    //     ...state,\n    //     // post is of type \"any\" b/c the \"_id\" is randomly generated by the NoSQL database. It is not a field in my Post object\n    //     posts: state.posts.map((post: any) =>\n    //       post._id === payload.id ? { ...post, likes: payload.likes } : post\n    //     ),\n    //     loading: false\n    //   };\n    // case ADD_COMMENT:\n    //   return {\n    //     ...state,\n    //     post: { ...(<any>state.post), comments: payload },\n    //     loading: false\n    //   };\n    // case REMOVE_COMMENT:\n    //   return {\n    //     ...state,\n    //     post: {\n    //       ...(<any>state.post),\n    //       comments: state.post.comments.filter(\n    //         comment => comment._id !== payload\n    //       )\n    //     },\n    //     loading: false\n    //   };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/vishnukdawah/Desktop/devConnector-typescript-heroku/client/src/reducers/post.ts"],"names":["ActionTypes","initialState","posts","post","user","text","name","avatar","likes","comments","_id","date","Date","loading","error","state","action","type","GET_POSTS","payload"],"mappings":";AAAA,SASEA,WATF,QAUO,kBAVP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,IADF;AAEJC,IAAAA,IAAI,EAAE,QAFF;AAGJC,IAAAA,IAAI,EAAE,QAHF;AAIJC,IAAAA,MAAM,EAAE,QAJJ;AAKJC,IAAAA,KAAK,EAAE,CACL;AACEJ,MAAAA,IAAI,EAAE;AADR,KADK,CALH;AAUJK,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,GAAG,EAAE,QADP;AAEEN,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,IAAI,EAAE,QAHR;AAIEC,MAAAA,IAAI,EAAE,QAJR;AAKEC,MAAAA,MAAM,EAAE,QALV;AAMEI,MAAAA,IAAI,EAAEC;AANR,KADQ,CAVN;AAoBJD,IAAAA,IAAI,EAAEC;AApBF,GAFa;AAwBnBC,EAAAA,OAAO,EAAE,IAxBU;AAyBnBC,EAAAA,KAAK,EAAE;AAzBY,CAArB;AA4BA,eAAe,UAASC,KAAK,GAAGd,YAAjB,EAA+Be,MAA/B,EAAwD;AACrE;AAEA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,WAAW,CAACkB,SAAjB;AACE,+BACKH,KADL;AAEEb,QAAAA,KAAK,EAAEiB,OAFT;AAGEN,QAAAA,OAAO,EAAE;AAHX;AAMF;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE,aAAOE,KAAP;AAlEJ;AAoED","sourcesContent":["import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  PostActionTypes,\n  ActionTypes\n} from \"../actions/types\";\nimport { Post } from \"../types/Post\";\n\nconst initialState = {\n  posts: [],\n  post: {\n    user: null,\n    text: \"string\",\n    name: \"string\",\n    avatar: \"string\",\n    likes: [\n      {\n        user: null\n      }\n    ],\n    comments: [\n      {\n        _id: \"string\",\n        user: null,\n        text: \"string\",\n        name: \"string\",\n        avatar: \"string\",\n        date: Date\n      }\n    ],\n    date: Date\n  },\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action: PostActionTypes) {\n  // const { type, payload } = action;\n\n  switch (action.type) {\n    case ActionTypes.GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n\n    // case ActionTypes.GET_POST:\n    //   return {\n    //     ...state,\n    //     post: payload,\n    //     loading: false\n    //   };\n\n    // case ADD_POST:\n    //   return {\n    //     ...state,\n    //     posts: [payload, ...state.posts],\n    //     loading: false\n    //   };\n\n    // case DELETE_POST:\n    //   return {\n    //     ...state,\n    //     // post is of type \"any\" b/c the \"_id\" is randomly generated by the NoSQL database. It is not a field in my Post object\n    //     posts: state.posts.filter((post: any) => post._id !== payload),\n    //     loading: false\n    //   };\n\n    // case POST_ERROR:\n    //   return {\n    //     ...state,\n    //     error: payload,\n    //     loading: false\n    //   };\n\n    // case UPDATE_LIKES:\n    //   return {\n    //     ...state,\n    //     // post is of type \"any\" b/c the \"_id\" is randomly generated by the NoSQL database. It is not a field in my Post object\n    //     posts: state.posts.map((post: any) =>\n    //       post._id === payload.id ? { ...post, likes: payload.likes } : post\n    //     ),\n    //     loading: false\n    //   };\n\n    // case ADD_COMMENT:\n    //   return {\n    //     ...state,\n    //     post: { ...(<any>state.post), comments: payload },\n    //     loading: false\n    //   };\n    // case REMOVE_COMMENT:\n    //   return {\n    //     ...state,\n    //     post: {\n    //       ...(<any>state.post),\n    //       comments: state.post.comments.filter(\n    //         comment => comment._id !== payload\n    //       )\n    //     },\n    //     loading: false\n    //   };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}