{"ast":null,"code":"var _jsxFileName = \"/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/profile/Profile.js\";\n// Section 10 Lecture 56 - Starting On The Profile\n// The parent component for the View Profile page\n// bring in the state, bring in the actual profile data\n// we need to get the ID from the route (the URL)\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\"; // we pull out \"match\" from the URL. The URL has the ID and we can access it with \"match\"\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  // immediately when the profile mounts, getProfileById() will get the profile\n  useEffect(() => {\n    getProfileById(match.params.id); // NOT _id maybe b/c it comes from the URL and not the online database?\n  }, [getProfileById]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Back To Profile\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","getProfileById","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CAEA;;AACA,MAAMC,OAAO,GAAG,CAAC;AACfD,EAAAA,cADe;AAEfE,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFM;AAGfC,EAAAA,IAHe;AAIfC,EAAAA;AAJe,CAAD,KAKV;AACJ;AACAV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd,CADc,CACmB;AAClC,GAFQ,EAEN,CAACP,cAAD,CAFM,CAAT;AAGA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGE,OAAO,KAAK,IAAZ,IAAoBC,OAApB,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAMGC,IAAI,CAACI,eAAL,IACCJ,IAAI,CAACD,OAAL,KAAiB,KADlB,IAECC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GARnC,CALJ,CADF;AAmBD,CA7BD;;AA+BAT,OAAO,CAACU,SAAR,GAAoB;AAClBX,EAAAA,cAAc,EAAEJ,SAAS,CAACgB,IAAV,CAAeC;AADb,CAApB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,OAAO,EAAEa,KAAK,CAACb,OADiB;AAEhCE,EAAAA,IAAI,EAAEW,KAAK,CAACX;AAFoB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CACpBgB,eADoB,EAEpB;AAAEd,EAAAA;AAAF,CAFoB,CAAP,CAGbC,OAHa,CAAf","sourcesContent":["// Section 10 Lecture 56 - Starting On The Profile\n// The parent component for the View Profile page\n// bring in the state, bring in the actual profile data\n// we need to get the ID from the route (the URL)\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\n\n// we pull out \"match\" from the URL. The URL has the ID and we can access it with \"match\"\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match\n}) => {\n  // immediately when the profile mounts, getProfileById() will get the profile\n  useEffect(() => {\n    getProfileById(match.params.id); // NOT _id maybe b/c it comes from the URL and not the online database?\n  }, [getProfileById]);\n  return (\n    <Fragment>\n      {/* check if profile is loaded. While loading show the spinner gif. Otherwise, show the profile */}\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back To Profile\n          </Link>\n\n          {/* If the profile you are viewing is yours, show the Edit Button */}\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { getProfileById }\n)(Profile);\n"]},"metadata":{},"sourceType":"module"}