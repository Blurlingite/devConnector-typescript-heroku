{"ast":null,"code":"var _jsxFileName = \"/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/dashboard/Dashboard.js\";\n// Section 9 Lecture 44\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; // Spinner component that will be used to show a spinner when profile cannot be loaded\n\nimport Spinner from \"../layout/Spinner\";\nimport { getCurrentProfile } from \"../../actions/profile\"; // pull out \"profile\" (state of profile) and \"loading\" from \"profile\" being passed in\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  // we want to call getCurrentProfile as soon as this component loads\n  useEffect(() => {\n    getCurrentProfile();\n  }, []); // profile is null and is still loading, show the spinner gif\n\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \"Welcome \", user && user.name));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","profile","loading","user","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,iBAAT,QAAkC,uBAAlC,C,CAEA;;AACA,MAAMC,SAAS,GAAG,CAAC;AACjBD,EAAAA,iBADiB;AAEjBE,EAAAA,IAFiB;AAGjBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHQ,CAAD,KAIZ;AACJ;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT,CAFI,CAMJ;;AACA,SAAOI,OAAO,IAAID,OAAO,KAAK,IAAvB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,cAEWE,IAAI,IAAIA,IAAI,CAACC,IAFxB,CAFF,CAHF;AAWD,CAtBD;;AAwBAL,SAAS,CAACM,SAAV,GAAsB;AACpBP,EAAAA,iBAAiB,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADd;AAEpBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD,UAFH;AAGpBN,EAAAA,OAAO,EAAEN,SAAS,CAACa,MAAV,CAAiBD;AAHN,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADoB;AAEhCC,EAAAA,OAAO,EAAES,KAAK,CAACT;AAFiB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CACpBa,eADoB,EAEpB;AAAEX,EAAAA;AAAF,CAFoB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["// Section 9 Lecture 44\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n// Spinner component that will be used to show a spinner when profile cannot be loaded\nimport Spinner from \"../layout/Spinner\";\nimport { getCurrentProfile } from \"../../actions/profile\";\n\n// pull out \"profile\" (state of profile) and \"loading\" from \"profile\" being passed in\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: { profile, loading }\n}) => {\n  // we want to call getCurrentProfile as soon as this component loads\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  // profile is null and is still loading, show the spinner gif\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\" />\n        Welcome {user && user.name}\n      </p>\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\nexport default connect(\n  mapStateToProps,\n  { getCurrentProfile }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}