{"ast":null,"code":"const initialState = [];\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/vishnukdawah/Desktop/devConnector-typescript-heroku/client/src/reducers/alert.ts"],"names":["initialState","state","action","type","payload","SET_ALERT","REMOVE_ALERT","filter","alert","id"],"mappings":"AAEA,MAAMA,YAA8D,GAAG,EAAvE;AAEA,eAAe,UAASC,KAAK,GAAGD,YAAjB,EAA+BE,MAA/B,EAAyD;AAAA,QAC9DC,IAD8D,GAC5CD,MAD4C,CAC9DC,IAD8D;AAAA,QACxDC,OADwD,GAC5CF,MAD4C,CACxDE,OADwD;;AAEtE,UAAQD,IAAR;AACE,SAAKE,SAAL;AACE,aAAO,CAAC,GAAGJ,KAAJ,EAAWG,OAAX,CAAP;;AAEF,SAAKE,YAAL;AACE,aAAOL,KAAK,CAACM,MAAN,CAAaC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaL,OAAnC,CAAP;;AACF;AACE,aAAOH,KAAP;AAPJ;AASD","sourcesContent":["import { AlertActionTypes } from \"../actions/types\";\nimport { AnyAction } from \"redux\";\nconst initialState: { msg: string; alertType: string; id: string }[] = [];\n\nexport default function(state = initialState, action: AlertActionTypes) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}