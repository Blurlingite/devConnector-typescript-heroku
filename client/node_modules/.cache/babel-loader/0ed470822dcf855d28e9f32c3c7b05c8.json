{"ast":null,"code":"// Section 11 Lecture 60 - Post Reducer, Action & Initial\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_POSTS, POST_ERROR } from \"./types\"; // Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    // the endpoint comes from your backend. The HTTP request that gets the posts\n    const res = await axios.get(\"/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add like\n// we need to know which post we are adding a like to so we need to pass in \"id\"\n\nexport const addLike = postId => async dispatch => {\n  try {\n    // the endpoint comes from your backend. The HTTP request that gets the posts\n    const res = await axios.put(\"/api/posts/like/\".concat(postId));\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/vishnukdawah/Documents/github/MERN-apps/devConnector/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","postId","put"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,SAAtC,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,MAAI;AACF;AACA,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,YAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,SADC;AAEPO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GARD,CAQE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL,UADC;AAEPM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAfM,C,CAiBP;AACA;;AACA,OAAO,MAAMC,OAAO,GAAGC,MAAM,IAAI,MAAMZ,QAAN,IAAkB;AACjD,MAAI;AACF;AACA,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACkB,GAAN,2BAA6BD,MAA7B,EAAlB;AAEAZ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,SADC;AAEPO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GARD,CAQE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL,UADC;AAEPM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAfM","sourcesContent":["// Section 11 Lecture 60 - Post Reducer, Action & Initial\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_POSTS, POST_ERROR } from \"./types\";\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    // the endpoint comes from your backend. The HTTP request that gets the posts\n    const res = await axios.get(\"/api/posts\");\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add like\n// we need to know which post we are adding a like to so we need to pass in \"id\"\nexport const addLike = postId => async dispatch => {\n  try {\n    // the endpoint comes from your backend. The HTTP request that gets the posts\n    const res = await axios.put(`/api/posts/like/${postId}`);\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}